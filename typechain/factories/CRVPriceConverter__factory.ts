/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { CRVPriceConverter } from "../CRVPriceConverter";

export class CRVPriceConverter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<CRVPriceConverter> {
    return super.deploy(overrides || {}) as Promise<CRVPriceConverter>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CRVPriceConverter {
    return super.attach(address) as CRVPriceConverter;
  }
  connect(signer: Signer): CRVPriceConverter__factory {
    return super.connect(signer) as CRVPriceConverter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CRVPriceConverter {
    return new Contract(address, _abi, signerOrProvider) as CRVPriceConverter;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_token_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "yCrvToUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "zap",
    outputs: [
      {
        internalType: "contract IConverter",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600080546001600160a01b03191673bbc81d23ea2c3ec7e56d39296f0cbb648873a5d317905534801561003657600080fd5b50610164806100466000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063262d61521461003b5780638c92b1301461005f575b600080fd5b610043610094565b604080516001600160a01b039092168252519081900360200190f35b6100826004803603604081101561007557600080fd5b50803590602001356100a3565b60408051918252519081900360200190f35b6000546001600160a01b031681565b600080546040805163cc2b27d760e01b815260048101869052600f85810b900b602482015290516001600160a01b039092169163cc2b27d791604480820192602092909190829003018186803b1580156100fc57600080fd5b505afa158015610110573d6000803e3d6000fd5b505050506040513d602081101561012657600080fd5b5051939250505056fea265627a7a72315820c7fad08291d81290e9b60d7a140122c526d2358a3a64fec303ed9f69e042ac9264736f6c63430005100032";
