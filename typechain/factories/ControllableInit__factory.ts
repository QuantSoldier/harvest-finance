/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ControllableInit } from "../ControllableInit";

export class ControllableInit__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ControllableInit> {
    return super.deploy(overrides || {}) as Promise<ControllableInit>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ControllableInit {
    return super.attach(address) as ControllableInit;
  }
  connect(signer: Signer): ControllableInit__factory {
    return super.connect(signer) as ControllableInit__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ControllableInit {
    return new Contract(address, _abi, signerOrProvider) as ControllableInit;
  }
}

const _abi = [
  {
    inputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    constant: true,
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_storage",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_store",
        type: "address",
      },
    ],
    name: "setStorage",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604080517f656970313936372e676f7665726e61626c65496e69742e73746f7261676500008152905190819003601e0190207fa7ec62784904ff31cbcc32d09932a58e7f1e4476e1d041995b37c917990b16dc6000199091011461007157fe5b6104a6806100806000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80635aa6e675146100515780639137c1a714610075578063c4d66de81461009d578063f77c4791146100c3575b600080fd5b6100596100cb565b604080516001600160a01b039092168252519081900360200190f35b61009b6004803603602081101561008b57600080fd5b50356001600160a01b031661013e565b005b61009b600480360360208110156100b357600080fd5b50356001600160a01b0316610270565b61005961031c565b60006100d561035e565b6001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b15801561010d57600080fd5b505afa158015610121573d6000803e3d6000fd5b505050506040513d602081101561013757600080fd5b5051905090565b61014661035e565b6001600160a01b031663dee1f0e4336040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b15801561019b57600080fd5b505afa1580156101af573d6000803e3d6000fd5b505050506040513d60208110156101c557600080fd5b5051610209576040805162461bcd60e51b815260206004820152600e60248201526d4e6f7420676f7665726e616e636560901b604482015290519081900360640190fd5b6001600160a01b038116610264576040805162461bcd60e51b815260206004820152601e60248201527f6e65772073746f726167652073686f756c646e277420626520656d7074790000604482015290519081900360640190fd5b61026d81610383565b50565b600054610100900460ff168061028957506102896103a7565b80610297575060005460ff16155b6102d25760405162461bcd60e51b815260040180806020018281038252602e815260200180610444602e913960400191505060405180910390fd5b600054610100900460ff161580156102fd576000805460ff1961ff0019909116610100171660011790555b610306826103ad565b8015610318576000805461ff00191690555b5050565b600061032661035e565b6001600160a01b031663f77c47916040518163ffffffff1660e01b815260040160206040518083038186803b15801561010d57600080fd5b7fa7ec62784904ff31cbcc32d09932a58e7f1e4476e1d041995b37c917990b16dc5490565b7fa7ec62784904ff31cbcc32d09932a58e7f1e4476e1d041995b37c917990b16dc55565b303b1590565b600054610100900460ff16806103c657506103c66103a7565b806103d4575060005460ff16155b61040f5760405162461bcd60e51b815260040180806020018281038252602e815260200180610444602e913960400191505060405180910390fd5b600054610100900460ff1615801561043a576000805460ff1961ff0019909116610100171660011790555b6103068261038356fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a7231582080abeabd21c0059c9ce7742e5e9ff53745afcf12b9762047bc27f2544edbb9dd64736f6c63430005100032";
