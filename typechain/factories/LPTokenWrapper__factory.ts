/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { LPTokenWrapper } from "../LPTokenWrapper";

export class LPTokenWrapper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<LPTokenWrapper> {
    return super.deploy(overrides || {}) as Promise<LPTokenWrapper>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LPTokenWrapper {
    return super.attach(address) as LPTokenWrapper;
  }
  connect(signer: Signer): LPTokenWrapper__factory {
    return super.connect(signer) as LPTokenWrapper__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LPTokenWrapper {
    return new Contract(address, _abi, signerOrProvider) as LPTokenWrapper;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "lpToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610636806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806318160ddd1461005c5780632e1a7d4d146100765780635fcbd2851461009557806370a08231146100b9578063a694fc3a146100df575b600080fd5b6100646100fc565b60408051918252519081900360200190f35b6100936004803603602081101561008c57600080fd5b5035610102565b005b61009d610166565b604080516001600160a01b039092168252519081900360200190f35b610064600480360360208110156100cf57600080fd5b50356001600160a01b0316610175565b610093600480360360208110156100f557600080fd5b5035610190565b60015490565b600154610115908263ffffffff6101f216565b60015533600090815260026020526040902054610138908263ffffffff6101f216565b336000818152600260205260408120929092559054610163916001600160a01b03909116908361023b565b50565b6000546001600160a01b031681565b6001600160a01b031660009081526002602052604090205490565b6001546101a3908263ffffffff61029216565b600155336000908152600260205260409020546101c6908263ffffffff61029216565b336000818152600260205260408120929092559054610163916001600160a01b039091169030846102ec565b600061023483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061034c565b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261028d9084906103e3565b505050565b600082820183811015610234576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526103469085906103e3565b50505050565b600081848411156103db5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156103a0578181015183820152602001610388565b50505050905090810190601f1680156103cd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6103f5826001600160a01b031661059b565b610446576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b602083106104845780518252601f199092019160209182019101610465565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146104e6576040519150601f19603f3d011682016040523d82523d6000602084013e6104eb565b606091505b509150915081610542576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156103465780806020019051602081101561055e57600080fd5b50516103465760405162461bcd60e51b815260040180806020018281038252602a8152602001806105d8602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906105cf57508115155b94935050505056fe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a72315820d86b468fcca9aa5325245fa8c5800450b11ed75424052cee920b242d081b25d864736f6c63430005100032";
